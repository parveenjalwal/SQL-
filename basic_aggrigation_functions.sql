# here all aggriation qustion will be based on sakilla data base 
# therefor we are importing sakila database 

use sakila ; 

# Question 1: Retrieve the total number of rentals made in the Sakila database. Hint: Use the COUNT() function. ? 

#answer >>  
select count(*) as total_rental 
from sakila_rental; 


# Question 2: Find the average rental duration (in days) of movies rented from the Sakila database. Hint: Utilize the AVG() function. ? 

# answer >>
select 
round(avg(rental_duration ),0) as avg_duration_days
from sakila_film ; 


# Question 3: Display the first name and last name of customers in uppercase ? 

# answer >> 
select upper(first_name) as first_name , 
upper(last_name) as last_name 
from sakila_customer ;


#Question 4 : Extract the month from the rental date and display it alongside the rental ID. 

# answer >> 
select rental_id ,date(rental_date) as rental_date , 
month(date(rental_date)) as rental_month  
from sakila_rental ; 



# Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals). ?

# answer >> 
select customer_id ,
count(*) as total_rental 
from sakila_rental 
group by customer_id  
order by total_rental desc  ; 



#qustion 6:  Find the total revenue generated by each store.

use mavenmovies ; 
# answer >.

select s.store_id  , sum(p.amount) 
from payment p 
join staff s 
on s.staff_id = p.staff_id 
group by s.store_id ;  



#QUSTION 7: Determine the total number of rentals for each category of movies. ? 

# answer >>
select c.name as category , 
count(rental_id ) as total_rental  
from rental r 
join inventory inv on r.inventory_id = inv.inventory_id
join film f on inv.film_id = f.film_id 
join film_category fc on fc.film_id = f.film_id 
join  category c on c.category_id = fc.category_id
group by c.name ; 
-- above we connected four tables based on film_id , category_id , inverntory_id 




#QUSTION 8 : Find the average rental rate of movies in each language ? 
use mavenmovies ; 
# answer >> 
select * from film ; 
select * from language ; 

select l.name as langauge , 
avg(rental_rate) as avg_rental 
from film f 
join language l on 
f.language_id = l.language_id 
group by l.name ; -- here got only avg rental of english beucase in film table only 1 langague id exits which refer to english therefor 
-- it didn,t let sql bring avg rental of ALL LANGUAGE 


-- all language after considring language table as left table and its corrsponding data only 
select l.name as langauge , 
avg(rental_rate) as avg_rental 
from language l
left join film f on 
f.language_id = l.language_id 
group by l.name ;  






 